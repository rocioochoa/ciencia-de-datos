import numpy as np
import pandas as pd
import pickle
import matplotlib.pyplot as plt

#Estabelcemos el data frame para la fecha
print("\nPrograma de perros con Pandas :D\n")
fronteras = pd.read_csv('frontera.csv')
fronteras["Date"] = pd.to_datetime(fronteras["Date"], format="%m/%d/%Y")
es_2019 = fronteras["Date"].dt.strftime("%Y") == "2019"
#-------------------------------------------------------------------

#Establecemos el data frame de que estamos en la frontera de Canada
es_Canada = fronteras["Border"] == "US-Canada Border"
frontCanada = fronteras[es_Canada & es_2019]
#------------------------------------------------------------------

#Creamos el data frame con ubicarnos en canada y sea el año 2019
DataFrameCanada = pd.DataFrame(frontCanada)
cols_to_subset = ["Port Name", "State", "Date", "Measure", "Value"]
filtroFinal = DataFrameCanada[cols_to_subset]
DataFrameFiltro = pd.DataFrame(filtroFinal)
#print(filtroFinal)
#--------------------------------------------------------------------

#Creamos las condiciones de PVP y PV
es_PerVehPas = fronteras["Measure"] == "Personal Vehicle Passengers"
es_PerVeh = fronteras["Measure"] == "Personal Vehicles"
#--------------------------------------------------------------------

#Creamos las condiciones de PD
es_PD = fronteras["Measure"] == "Pedestrians"

#---------------------------------------------------------------------

#Creación de la ubicación de los estados
es_NY = fronteras["State"] == "NY"


#--------------------------------------------------------------------

#Creamos el DataFrame de NYPVP, NYPV Para el ESTADO DE NY
frameDePerNYPV = fronteras[es_2019 & es_Canada & es_PerVeh & es_NY]
DataFrameNYPV = pd.DataFrame(frameDePerNYPV)
#print(frameDePerNYPV)
frameDePerNYPVP = fronteras[es_2019 & es_Canada & es_PerVehPas & es_NY]
DataFrameNYPVP = pd.DataFrame(frameDePerNYPVP)
#print(frameDePerNYPVP)



#-------------------------------------------------------------------------

#Cremos el data frame de Pedestrians
frameDeNYPD = fronteras[es_2019 & es_Canada & es_PD & es_NY]
DataFrameNYPD = pd.DataFrame(frameDeNYPD)
#print(DataFrameNYPD)


#--------------------------------------------------------------------------

#Gráfica de lineas por estado sin detalles de puertas, que muestra el movimiento de Personal Vehicles
#xNYPV=DataFrameNYPV['Date']
#yNYPV=DataFrameNYPV['Value']
#plt.plot(xNYPV,yNYPV)
#plt.show()



#-------------------------------------------------------------------------------------------------------

#Hacer Gráfica de puntos que muestre el comportamiento de "Pedestrians". Que sea una gráfica
#por cada estado y con detalle de puertas en la horizontal
#xNYPD=frameDePerNYPD['Port Name']
#yNYPD=frameDePerNYPD['Value']
#plt.scatter(xNYPD,yNYPD)
#plt.show()


#--------------------------------------------------------------------------------------------------------

#Creamos los data frames con la condición de PV y PVP Por estado
nyPV= DataFrameNYPV[DataFrameNYPV['Measure']=='Personal Vehicles']
nyPVP= DataFrameNYPVP[DataFrameNYPVP['Measure']=='Personal Vehicle Passengers']
dfnyPV= pd.DataFrame(nyPV)
dfnyPVP= pd.DataFrame(nyPVP)
sumaNYPV = dfnyPV.groupby('Port Name')['Value'].sum()
sumaNYPVP = dfnyPVP.groupby('Port Name')['Value'].sum()
dfsumaNYPV= pd.DataFrame(sumaNYPV)
dfsumaNYPVP= pd.DataFrame(sumaNYPVP)



#print(dfsumaNYPV)
#print(dfsumaNYPVP)
#---------------------------------------------------------------------------------------

#Unimos PV y PVP POR CADA ESTADO dentro de un mismo data frame
JuntosNY= pd.merge(dfsumaNYPV,dfsumaNYPVP,on='Port Name')
dfJuntosNY=pd.DataFrame(JuntosNY)


#print(dfJuntosNY)
#-----------------------------------------------------------------------------------------

#Graficamos por estado las dos barras en una gráfica
#JuntosNYx = dfJuntosNY[['Value_x','Value_y']]
#JuntosNYx.plot.bar()
#plt.show()

#-----------------------------------------------------------------------------------------

#Histograma de Buss pasengers para todos los estados

es_BP = fronteras["Measure"] == "Bus Passengers"
frameDeBP = fronteras[es_2019 & es_Canada & es_BP ]
DataFrameBP = pd.DataFrame(frameDeBP)
#print(DataFrameBP)

#xBP=DataFrameBP['Value']
#yBP=DataFrameBP[]
#plt.hist(xBP)
#plt.show()

#DataFrameBP['Value'].plot.hist()
#plt.show()
